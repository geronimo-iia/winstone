From v0.8, there's an option to allow access logging. It's disabled by default, but can be enabled by defining a logging implementation class, with --accessLoggerClassName. The class defined must be an implementation of the interface net.winstone.log.AccessLogger, and is defined container wide, but instantiated once per webapp.

The supplied logger is called net.winstone.log.SimpleAccessLogger. It supports Apache style combined/common format logs, as well as Resin format (which is actually just Apache common style plus a user agent). Configuration options are:

    * --simpleAccessLogger.format: Either "combined", "common", "resin" or a pattern made up of wildcards. For example, the combined format string is:

      ###ip### - ###user### ###time### "###uriLine###" ###status### ###size### "###referer###" "###userAgent###"

      but you can re-arrange this to be any pattern of the above wildcards with the --accessLoggerFormat switch. Defaults to "combined"
    * --simpleAccessLogger.file: A pattern for defining the files to log to. The default value is logs/###host###/###webapp###_access.log, which splits the log files for different webapps and hosts into directories. The wildcards ###host### and ###webapp### can be moved around or even omitted. Omitting the wildcard will mean the access logs will be combined into shared files (since the file name will be the same)

For example, to enable Apache Combined style logging to separate files, use a command line like:

java -jar winstone.jar --hostsDir=<vhostsDir>
                           --accessLoggerClassName=net.winstone.log.SimpleAccessLogger

Or to log just the date and URI for all hosts/webapps to a single file, use a command line like:

java -jar winstone.jar --hostsDir=<vhostsDir>
                       --accessLoggerClassName=net.winstone.log.SimpleAccessLogger
                       --simpleAccessLogger.format=###date###\ ###uriLine###
                       --simpleAccessLogger.file=/mylogs/access_log.txt